{"ast":null,"code":"var _jsxFileName = \"D:\\\\jwt login\\\\react-jwt-auth-master\\\\src\\\\components\\\\Allcourses.js\";\nimport React, { useState, useEffect } from 'react';\nimport Course from \"./Course\";\nimport base_url from \"./../api/bootapi\";\nimport axios from \"axios\";\nimport courseService from '../services/course.service';\nimport { toast } from 'react-toastify';\n\nconst Allcourse = () => {\n  useEffect(() => {\n    document.title = \"All Courses || Learncode\";\n  }, []); //function to call server:\n\n  const getAllCoursesFromServer = () => {\n    courseService.getAllCourses().then(response => {\n      //success\n      console.log(response.data);\n      toast.success(\"courses has been loaded\", {\n        position: \"bottom-center\"\n      });\n      setCourses(response.data);\n    }, error => {\n      //for error\n      console.log(error);\n      toast.error(\"something went wrong\");\n    });\n  }; //calling loading course function\n\n\n  useEffect(() => {\n    getAllCoursesFromServer();\n  }, []);\n  const [courses, setCourses] = useState([]);\n\n  const updateCourses = id => {\n    setCourses(courses.filter(c => c.id !== id));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"All Course\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"List of all courses are as follows\"), courses.length > 0 ? courses.map(item => React.createElement(Course, {\n    key: item.id,\n    course: item,\n    update: updateCourses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : \"No courses\");\n};\n\nexport default Allcourse;","map":{"version":3,"sources":["D:/jwt login/react-jwt-auth-master/src/components/Allcourses.js"],"names":["React","useState","useEffect","Course","base_url","axios","courseService","toast","Allcourse","document","title","getAllCoursesFromServer","getAllCourses","then","response","console","log","data","success","position","setCourses","error","courses","updateCourses","id","filter","c","length","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAExBN,EAAAA,SAAS,CAAC,MAAI;AACdO,IAAAA,QAAQ,CAACC,KAAT,GAAe,0BAAf;AACC,GAFQ,EAEP,EAFO,CAAT,CAFwB,CAMxB;;AACA,QAAMC,uBAAuB,GAAC,MAAI;AAC9BL,IAAAA,aAAa,CAACM,aAAd,GAA8BC,IAA9B,CACIC,QAAD,IAAY;AACnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,MAAAA,KAAK,CAACW,OAAN,CAAc,yBAAd,EAAwC;AACpCC,QAAAA,QAAQ,EAAC;AAD2B,OAAxC;AAGAC,MAAAA,UAAU,CAACN,QAAQ,CAACG,IAAV,CAAV;AACQ,KARJ,EASII,KAAD,IAAS;AAER;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAd,MAAAA,KAAK,CAACc,KAAN,CAAY,sBAAZ;AACA,KAdJ;AAgBH,GAjBD,CAPwB,CA0BxB;;;AACAnB,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,uBAAuB;AAE1B,GAHQ,EAGP,EAHO,CAAT;AAII,QAAM,CAACW,OAAD,EAASF,UAAT,IAAuBnB,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMsB,aAAa,GAAEC,EAAD,IAAM;AACtBJ,IAAAA,UAAU,CAACE,OAAO,CAACG,MAAR,CAAgBC,CAAD,IAAKA,CAAC,CAACF,EAAF,KAASA,EAA7B,CAAD,CAAV;AAEH,GAHD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFJ,EAIQF,OAAO,CAACK,MAAR,GAAe,CAAf,GAAkBL,OAAO,CAACM,GAAR,CAAaC,IAAD,IAAS,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACL,EAAlB;AAAsB,IAAA,MAAM,EAAEK,IAA9B;AAAoC,IAAA,MAAM,EAAEN,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAAlB,GAAuG,YAJ/G,CADJ;AAUH,CArDD;;AAsDA,eAAef,SAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport Course from \"./Course\";\r\nimport base_url from \"./../api/bootapi\";\r\nimport axios from \"axios\";\r\nimport courseService from '../services/course.service';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Allcourse = () => {\r\n\r\nuseEffect(()=>{\r\ndocument.title=\"All Courses || Learncode\";\r\n},[]);\r\n\r\n//function to call server:\r\nconst getAllCoursesFromServer=()=>{\r\n    courseService.getAllCourses().then(\r\n       (response)=>{\r\n//success\r\nconsole.log(response.data);\r\ntoast.success(\"courses has been loaded\",{\r\n    position:\"bottom-center\",\r\n});\r\nsetCourses(response.data);\r\n       },\r\n       (error)=>{\r\n\r\n        //for error\r\n        console.log(error);\r\n        toast.error(\"something went wrong\");\r\n       }\r\n    );\r\n};\r\n\r\n//calling loading course function\r\nuseEffect(()=>{\r\n    getAllCoursesFromServer();\r\n\r\n},[]);\r\n    const [courses,setCourses] = useState([]);\r\n\r\n    const updateCourses=(id)=>{\r\n        setCourses(courses.filter((c)=>c.id !== id));\r\n\r\n    };\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>All Course</h1>\r\n            <p>List of all courses are as follows</p>\r\n            {\r\n                courses.length>0? courses.map((item)=> <Course key={item.id} course={item} update={updateCourses} />): \"No courses\"}\r\n            \r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Allcourse;"]},"metadata":{},"sourceType":"module"}